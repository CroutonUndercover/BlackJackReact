{"version":3,"sources":["deckOfCards.js","Card.js","Hand.js","Control.js","App.js","index.js"],"names":["Card","isClicked","console","log","state","clicked","setState","this","props","mutable","className","src","id","alt","height","width","onClick","bind","React","Component","Hand","deckOf","startIndex","endIndex","CardsArray","map","item","i","key","slice","Control","clickChange","suits","deck","rank","suit","push","length","j","Math","floor","random","temp","App","onClickChange","e","dealer","ReactDOM","render","document","getElementById"],"mappings":"+MAOA,I,+ECyCeA,G,kBA3CX,aAAc,IAAD,8BACT,+CAMJC,UAAY,WACRC,QAAQC,IAAI,EAAKC,MAAMC,SACvB,EAAKC,SAAS,CAACD,SAAQ,KAPvB,EAAKD,MAAM,CACPC,SAAU,GAHL,E,sEAaT,OAA0B,IAAvBE,KAAKC,MAAMC,SACgB,IAAvBF,KAAKH,MAAMC,QAEN,kBAAC,WAAD,KACI,yBAAKK,UAAY,gCACjBC,IAAG,uCAAkCJ,KAAKC,MAAMI,GAA7C,QACHC,IAAI,GAAGC,OAAO,MAAMC,MAAM,MAC1BC,QAAST,KAAKN,UAAUgB,KAAKV,SAM9B,8BAKP,kBAAC,WAAD,KACQ,yBAAKG,UAAY,2BACjBC,IAAG,uCAAkCJ,KAAKC,MAAMI,GAA7C,QACHC,IAAI,GAAGC,OAAO,MAAMC,MAAM,a,GAnC/BG,IAAMC,YCwBVC,EArBF,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,OAAOC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,SAAUd,EAAa,EAAbA,QAElCe,EAAaH,EAAOI,KAAI,SAACC,EAAMC,GAEjC,OAAQ,kBAAC,EAAD,CACJC,IAAKP,EAAOM,GACZf,GAAIS,EAAOM,GACXlB,QAAUA,OAIfoB,MAAMP,EAAYC,GAErB,OACI,yBAAKb,UAAU,cACVc,ICJEM,G,MAdC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,YACd,OACI,yBAAKrB,UAAU,iBACX,6BACI,yBACJA,UAAY,2BACZC,IAAI,sCACJE,IAAI,GAAGC,OAAO,MAAMC,MAAM,SAE1B,4BAAQL,UAAU,2BAA2BM,QAASe,GAAtD,KAAqE,mCAArE,SHXNC,EAAQ,CAAC,IAAK,IAAK,IAAK,KAG1BC,EAAO,GAEX,MAJc,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,KAI5E,eAAsB,CAAlB,IAAIC,EAAI,KAAU,uBAClB,IAAI,IAAJ,IAAgBF,EAAhB,+CAAsB,CAAC,IAAfG,EAAc,QAClBF,EAAKG,KAAKF,EAAOC,IAFH,mFAMtB,IAAI,IAAIR,EAAIM,EAAKI,OAAS,EAAGV,EAAI,EAAGA,IAAI,CACpC,IAAMW,EAAIC,KAAKC,MAAMD,KAAKE,SAAWd,GAC/Be,EAAOT,EAAKN,GAClBM,EAAKN,GAAKM,EAAKK,GACfL,EAAKK,GAAKI,EAEZ,IAAI,IAAIf,EAAEM,EAAKI,OAAS,EAAEV,EAAI,EAAGA,KAGlBM,QIoCFU,E,YAlDb,aAAc,IAAD,8BACX,+CAaJC,cAAgB,SAACC,GACX,EAAKzC,MAAMmB,SAAS,EAAKnB,MAAM6B,KAAKI,OAAO,IACjD,EAAK/B,SAAS,CAACgB,WAAY,EAAKlB,MAAMmB,SAAUA,SAAU,EAAKnB,MAAMmB,SAAS,IAC5ErB,QAAQC,IAAI,EAAKC,MAAMkB,WAAa,OAAQ,EAAKlB,MAAMmB,YAfrD,EAAKnB,MAAM,CACT6B,KAAKA,EACLX,WAAY,EACZC,SAAU,GALD,E,sEAwBX,IAAMuB,EAAS,kBAAC,EAAD,CACfzB,OAAUd,KAAKH,MAAM6B,KACrBX,WAAc,EACdC,SAAY,EACZd,SAAW,IAEX,OACE,6BAEI,wBAAIC,UAAU,iBAAd,aAECoC,EACD,kBAAC,EAAD,CACEzB,OAAUd,KAAKH,MAAM6B,KACrBX,WAAcf,KAAKH,MAAMkB,WACzBC,SAAYhB,KAAKH,MAAMmB,SACvBd,SAAW,IAEb,kBAAC,EAAD,CAASsB,YAAexB,KAAKqC,qB,GA3CrBzB,a,MCDlB4B,IAASC,OACT,kBAAC,EAAD,MACQC,SAASC,eAAe,W","file":"static/js/main.1dda00d1.chunk.js","sourcesContent":["\r\n//exports an array of strings representing each card, shuffled, using the Fisher-Yates Shuffle\r\nconst suits = [\"C\", \"D\", \"H\", \"S\"];\r\nconst ranks = [\"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"A\", \"J\", \"Q\", \"K\"];\r\n\r\nlet deck = [];\r\n\r\nfor(let rank of ranks){\r\n    for(let suit of suits){\r\n        deck.push(rank + suit)\r\n    }\r\n}\r\n\r\nfor(let i = deck.length - 1; i > 0; i--){\r\n    const j = Math.floor(Math.random() * i)\r\n    const temp = deck[i]\r\n    deck[i] = deck[j]\r\n    deck[j] = temp\r\n  }\r\n  for(let i=deck.length - 1;i > 0; i-- ){\r\n  }\r\n  \r\n  export default deck ;\r\n  ","import React, { Fragment } from 'react';\r\n\r\n\r\n//a card component matching the deckOfCArds array's elements to each image of a card in /assets/cards/\r\nclass Card extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            clicked : false,\r\n        }\r\n    }\r\n    \r\n    isClicked = () =>{\r\n        console.log(this.state.clicked)\r\n        this.setState({clicked:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.props.mutable === true){\r\n            if(this.state.clicked === false ){\r\n                return(\r\n                    <Fragment >\r\n                        <img className = 'dib br4 ma2 grow bw3 shadow-5' \r\n                        src={`/blackjackreact/assets/cards/${this.props.id}.png`} \r\n                        alt=\"\" height=\"200\" width=\"150\"\r\n                        onClick={this.isClicked.bind(this)}/>\r\n                    \r\n                    </Fragment>\r\n                )\r\n            }\r\n            else{\r\n                return(<div></div>)\r\n            }\r\n        }\r\n        else{\r\n            return(\r\n                <Fragment >\r\n                        <img className = 'dib br4 ma2 bw3 shadow-5' \r\n                        src={`/blackjackreact/assets/cards/${this.props.id}.png`} \r\n                        alt=\"\" height=\"200\" width=\"150\"\r\n                        />\r\n                 </Fragment>\r\n            )\r\n        }    \r\n    }\r\n\r\n\r\n}\r\nexport default Card","import React from 'react';\r\nimport Card from './Card';\r\n\r\n/*\r\nA component which when instantiated, defines the number of cards in player's and dealer's hands.\r\nIt is represented by an array, that starts from and ends in specific positions, defining the beggining of te game.\r\n*/\r\nconst Hand = ({deckOf,startIndex, endIndex, mutable} ) =>{\r\n    \r\n    const CardsArray = deckOf.map((item, i) => {\r\n        \r\n        return (<Card \r\n            key={deckOf[i]} \r\n            id={deckOf[i]} \r\n            mutable ={mutable}\r\n             />\r\n           )\r\n           \r\n    }).slice(startIndex, endIndex)\r\n\r\n    return(\r\n        <div className='fl w-70 tc'>\r\n            {CardsArray}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Hand;","import React from 'react';\r\nimport './Control.css'\r\n\r\n//a component controlling the removal of the player's cards.\r\nconst Control = ({clickChange}) =>{\r\n    return(\r\n        <div className='fl-30 pa2 dib'>\r\n            <div >\r\n                <img \r\n            className = 'dib br4 ma1 bw3 shadow-5' \r\n            src=\"/blackjackreact/assets/cardback.png\" \r\n            alt=\"\" height=\"200\" width=\"150\"/>\r\n            </div>\r\n            <button className='br3 f7 ma1 grow shadow-5' onClick={clickChange}>  <h1>HIT</h1>  </button>\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Control","import React, { Component } from 'react';\nimport './App.css';\nimport Hand from './Hand';\nimport Control from './Control';\nimport deck from './deckOfCards.js';\n\n\nclass App extends Component{\n  constructor(){\n    super()\n    this.state={\n      deck:deck,\n      startIndex: 3,\n      endIndex: 5\n    } \n  }\n\n  /*\n  Function that handles the change of the state. When the button in the Control component is pressed,\n  the function updates the state with the next cards that should be in the players hand upon pressing \n  the HIT button\n  */\nonClickChange = (e) => {\n  if (this.state.endIndex<this.state.deck.length+2){\nthis.setState({startIndex: this.state.endIndex, endIndex: this.state.endIndex+2})\n  console.log(this.state.startIndex + \" to \"+ this.state.endIndex)\n  }\n}\n\n  render(){\n    \n    //dealer's hand is hardcoded since it is not changing throughout the game \n    const dealer = <Hand \n    deckOf = {this.state.deck} \n    startIndex = {0} \n    endIndex = {3}\n    mutable = {false}\n    />\n    return(\n      <div >\n            \n          <h1 className='f1 tc br4 ma4'>BlackJack</h1>\n            \n          {dealer}\n          <Hand \n            deckOf = {this.state.deck} \n            startIndex = {this.state.startIndex} \n            endIndex = {this.state.endIndex}\n            mutable = {true}\n          />\n          <Control clickChange = {this.onClickChange}/>\n          \n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'tachyons';\n\nReactDOM.render(\n<App/>\n      , document.getElementById('root'));\n\n\n"],"sourceRoot":""}